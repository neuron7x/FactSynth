openapi: 3.0.3
info:
  title: FactSynth Ultimate Pro API
  version: "1.0.1"
servers: [{ url: http://localhost:8000 }]
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    IntentReq:
      type: object
      properties: { intent: {type:string}, length: {type: integer, default: 100, minimum:1, maximum:1000 } }
      required: [intent]
    ScoreReq:
      type: object
      properties:
        text: { type: string }
        targets: { type: array, items: {type: string} }
        callback_url: { type: string }
    ScoreBatchReq:
      type: object
      properties:
        items: { type: array, items: { $ref: '#/components/schemas/ScoreReq' } }
        callback_url: { type: string }
        limit: { type: integer, default: 1000 }
    GLRTPMReq:
      type: object
      properties:
        text: { type: string }
        callback_url: { type: string }
paths:
  /v1/healthz:
    get:
      summary: Health
      responses: { '200': { description: OK } }
  /metrics:
    get:
      summary: Prometheus metrics
      responses: { '200': { description: OK } }
  /v1/version:
    get:
      security: []
      summary: Service version & build info
      responses: { '200': { description: OK } }
  /v1/intent_reflector:
    post:
      security: [ { ApiKeyAuth: [] } ]
      summary: Reflect user intent
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/IntentReq' }
            example: { intent: "Summarize plan", length: 48 }
      responses: { '200': { description: OK } }
  /v1/score:
    post:
      security: [ { ApiKeyAuth: [] } ]
      summary: Score content
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ScoreReq' }
            example: { text: "hello world", targets: ["hello"] }
      responses: { '200': { description: OK }, '429': { description: Rate limited } }
  /v1/score/batch:
    post:
      security: [ { ApiKeyAuth: [] } ]
      summary: Batch scoring
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ScoreBatchReq' }
            example: { items: [ {text: "a"}, {text:"hello", targets:["hello"]} ] }
      responses: { '200': { description: OK } }
  /v1/stream:
    post:
      security: [ { ApiKeyAuth: [] } ]
      summary: SSE token stream
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ScoreReq' }
            example: { text: "stream this text" }
      responses: { '200': { description: OK, content: { text/event-stream: {} } } }
  /v1/glrtpm/run:
    post:
      security: [ { ApiKeyAuth: [] } ]
      summary: Run GLRTPM pipeline
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/GLRTPMReq' }
            example: { text: "pipeline test" }
      responses: { '200': { description: OK } }
