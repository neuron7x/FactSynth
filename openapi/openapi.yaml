openapi: 3.1.0
info:
  title: FactSynth Ultimate Pro API
  version: 1.0.5
paths:
  /v1/version:
    get:
      summary: Version
      operationId: version_v1_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Version V1 Version Get
  /v1/intent_reflector:
    post:
      summary: Intent Reflector
      operationId: intent_reflector_v1_intent_reflector_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntentReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/score:
    post:
      summary: Score
      operationId: score_v1_score_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/score/batch:
    post:
      summary: Score Batch
      operationId: score_batch_v1_score_batch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreBatchReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/stream:
    post:
      summary: Stream
      operationId: stream_v1_stream_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/verify:
    post:
      summary: Verify claim and lock
      description: Verify a claim using a lock
      operationId: verify_v1_verify_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
            examples:
              sample:
                value:
                  claim: "The earth orbits the sun"
                  lock:
                    version: "1.1"
                    nonce: "abc123"
                    api_guard: "factsynth-lock/v1.1"
                    verdict:
                      decision: "confirmed"
                    evidence:
                      - source_id: "1"
                        source: "url"
                        content: "text"
      responses:
        '200':
          description: Verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactSynthLock_v1_1'
              examples:
                sample:
                  value:
                    version: "1.1"
                    nonce: "abc123"
                    api_guard: "factsynth-lock/v1.1"
                    verdict:
                      decision: "confirmed"
                      confidence: 0.9
                    evidence:
                      - source_id: "99"
                        source: "https://example.com"
                        content: "astronomical observation"
  /v1/healthz:
    get:
      summary: Healthz
      operationId: healthz_v1_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Healthz V1 Healthz Get
  /metrics:
    get:
      summary: Metrics
      operationId: metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IntentReq:
      properties:
        intent:
          type: string
          minLength: 1
          title: Intent
          x-strip-whitespace: true
        length:
          type: integer
          maximum: 1000.0
          minimum: 1.0
          title: Length
          default: 100
      type: object
      required:
      - intent
      title: IntentReq
    ScoreBatchReq:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScoreReq'
          type: array
          title: Items
        callback_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Callback Url
        limit:
          type: integer
          maximum: 10000.0
          minimum: 1.0
          title: Limit
          default: 1000
      type: object
      title: ScoreBatchReq
    ScoreReq:
      properties:
        text:
          type: string
          minLength: 0
          title: Text
          default: ''
          x-strip-whitespace: true
        targets:
          anyOf:
          - items:
              type: string
              minLength: 1
              x-strip-whitespace: true
            type: array
          - type: 'null'
          title: Targets
        callback_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Callback Url
        domain:
          anyOf:
          - $ref: '#/components/schemas/DomainMetadata'
          - type: 'null'
          title: Domain
      type: object
      title: ScoreReq
    DomainMetadata:
      properties:
        region:
          type: string
          minLength: 1
          title: Region
          x-strip-whitespace: true
        language:
          type: string
          minLength: 1
          title: Language
          x-strip-whitespace: true
        time_range:
          type: string
          minLength: 1
          title: Time Range
          x-strip-whitespace: true
      required:
      - region
      - language
      - time_range
      type: object
      title: DomainMetadata
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    FactSynthLock_v1_1:
      type: object
      required:
        - version
        - nonce
        - api_guard
        - verdict
        - evidence
      properties:
        version:
          type: string
          enum: ["1.1"]
        nonce:
          type: string
        api_guard:
          type: string
          enum: ["factsynth-lock/v1.1"]
        verdict:
          type: object
          required:
            - decision
          properties:
            decision:
              type: string
              enum:
                - confirmed
                - refuted
                - mixed
                - not_enough_evidence
                - not_a_fact
            confidence:
              type: number
              minimum: 0
              maximum: 1
        evidence:
          type: array
          items:
            type: object
            required:
              - source_id
              - source
              - content
            properties:
              source_id:
                type: string
              source:
                type: string
              content:
                type: string
    VerifyRequest:
      type: object
      required:
        - claim
        - lock
      properties:
        claim:
          type: string
        lock:
          $ref: '#/components/schemas/FactSynthLock_v1_1'
