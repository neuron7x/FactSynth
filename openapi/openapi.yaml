openapi: 3.1.0
info:
  title: FactSynth Ultimate Pro API
  version: 1.0.5
paths:
  /v1/version:
    get:
      summary: Version
      operationId: version_v1_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Version V1 Version Get
  /v1/intent_reflector:
    post:
      summary: Intent Reflector
      operationId: intent_reflector_v1_intent_reflector_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntentReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/score:
    post:
      summary: Score
      operationId: score_v1_score_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/score/batch:
    post:
      summary: Score Batch
      operationId: score_batch_v1_score_batch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreBatchReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/stream:
    post:
      summary: Stream
      operationId: stream_v1_stream_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreReq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/verify:
    post:
      summary: Verify claim and lock
      description: Verify a claim using a lock
      operationId: verify_v1_verify_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
            examples:
              sample:
                value:
                  claim: "The earth orbits the sun"
                  region: "US"
                  language: "en"
                  time_range:
                    start: "2020-01-01T00:00:00Z"
                    end: "2020-12-31T23:59:59Z"
                  lock:
                    version: "1.1"
                    nonce: "abc123"
                    api_guard: "factsynth-lock/v1.1"
      responses:
        '200':
          description: Verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactSynthLock_v1_1'
              examples:
                sample:
                  value:
                    version: "1.1"
                    nonce: "abc123"
                    api_guard: "factsynth-lock/v1.1"
  /v1/healthz:
    get:
      summary: Healthz
      operationId: healthz_v1_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Healthz V1 Healthz Get
  /metrics:
    get:
      summary: Metrics
      operationId: metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IntentReq:
      properties:
        intent:
          type: string
          minLength: 1
          title: Intent
          x-strip-whitespace: true
        length:
          type: integer
          maximum: 1000.0
          minimum: 1.0
          title: Length
          default: 100
      type: object
      required:
      - intent
      title: IntentReq
    ScoreBatchReq:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScoreReq'
          type: array
          title: Items
        callback_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Callback Url
        limit:
          type: integer
          maximum: 10000.0
          minimum: 1.0
          title: Limit
          default: 1000
      type: object
      title: ScoreBatchReq
    ScoreReq:
      properties:
        text:
          type: string
          minLength: 0
          title: Text
          default: ''
          x-strip-whitespace: true
        targets:
          anyOf:
          - items:
              type: string
              minLength: 1
              x-strip-whitespace: true
            type: array
          - type: 'null'
          title: Targets
        callback_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Callback Url
      type: object
      title: ScoreReq
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    FactSynthLock_v1_1:
      type: object
      required:
        - version
        - nonce
        - api_guard
      properties:
        version:
          type: string
          enum: ["1.1"]
        nonce:
          type: string
        api_guard:
          type: string
          enum: ["factsynth-lock/v1.1"]
    VerifyRequest:
      type: object
      required:
        - claim
        - region
        - language
        - time_range
        - lock
      properties:
        claim:
          type: string
        region:
          type: string
          pattern: '^[A-Z]{2}$'
          description: ISO 3166-1 alpha-2 region code
        language:
          type: string
          pattern: '^[a-z]{2}$'
          description: ISO 639-1 language code
        time_range:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        lock:
          $ref: '#/components/schemas/FactSynthLock_v1_1'
