openapi: 3.0.3
info: { title: FactSynthLock, version: "1.1.0" }
components:
  schemas:
    FactSynthLock:
      type: object
      required: [verdict, source_synthesis, traceability, recommendations]
      properties:
        verdict:
          type: object
          required: [status, confidence, summary]
          properties:
            status: { type: string, enum: [SUPPORTED, REFUTED, UNCLEAR, OUT_OF_SCOPE, ERROR] }
            confidence: { type: number, minimum: 0, maximum: 1 }
            summary: { type: string, maxLength: 300 }
        source_synthesis:
          type: object
          required: [key_findings, citations]
          properties:
            key_findings: { type: string, maxLength: 1000 }
            citations:
              type: array
              minItems: 1
              items:
                type: object
                required: [id, source, snippet, relevance, date, url]
                properties:
                  id: { type: string }
                  source: { type: string }
                  snippet: { type: string, maxLength: 500 }
                  relevance: { type: number, minimum: 0, maximum: 1 }
                  date: { type: string, format: date }
                  url: { type: string, format: uri }
        traceability:
          type: object
          required: [retrieval_query, justification_steps, assumptions]
          properties:
            retrieval_query: { type: string, maxLength: 500 }
            justification_steps:
              type: array
              minItems: 3
              maxItems: 7
              items: { type: string, maxLength: 200 }
            assumptions:
              type: array
              maxItems: 10
              items: { type: string, maxLength: 200 }
        recommendations:
          type: object
          required: [next_query_suggestion, manual_review]
          properties:
            next_query_suggestion: { type: string, maxLength: 200 }
            gaps_identified:
              type: array
              maxItems: 10
              items: { type: string, maxLength: 200 }
            manual_review: { type: boolean }
        quality_report:
          type: object
          properties:
            coverage:
              type: object
              properties:
                total_candidates: { type: integer, minimum: 0 }
                passed_hard_filters: { type: integer, minimum: 0 }
                used_in_synthesis: { type: integer, minimum: 0 }
            quality_scores:
              type: object
              properties:
                sqs_median: { type: number }
                sqs_iqr: { type: number }
                ess_median: { type: number }
            diversity:
              type: object
              properties:
                domain_entropy: { type: number }
                geo_spread: { type: integer }
                media_mix:
                  type: object
                  properties:
                    primary: { type: integer }
                    secondary: { type: integer }
            recency:
              type: object
              properties:
                median_age_days: { type: integer }
                staleness_flag: { type: boolean }
            contradictions:
              type: object
              properties:
                conflict_pairs: { type: integer }
                max_pair_confidence: { type: number }
            adversarial_risk:
              type: object
              properties:
                level: { type: string, enum: [LOW, MEDIUM, HIGH] }
                signals:
                  type: array
                  items: { type: string }
        provenance:
          type: object
          properties:
            policy_snapshot_sha256: { type: string }
            citation_hashes:
              type: array
              items: { type: string }
            retrieval_id: { type: string }
        policy_snapshot:
          type: object
          properties:
            name: { type: string }
            version: { type: string }
            weights: { type: object }
