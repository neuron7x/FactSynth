name: Pages (Coverage + OpenAPI + Demo)
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.11"
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -e .[dev] || pip install -e .
      - name: Download coverage artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: coverage-xml-3.11
          path: .
      - name: Prepare site dirs
        run: mkdir -p site site/badges site/openapi
      - name: Copy OpenAPI spec
        env:
          TAG: ${{ github.ref_name }}
        run: |
          if [ -f openapi/openapi.yaml ]; then
            mkdir -p "site/openapi/${TAG}"
            cp openapi/openapi.yaml "site/openapi/${TAG}/openapi.yaml"
          fi
      - name: Generate coverage badge
        run: scripts/generate_coverage_badge.sh
      - name: Publish OpenAPI + Demo
        env:
          TAG: ${{ github.ref_name }}
        run: |
          if [ -f openapi/openapi.yaml ]; then
            python tools/generate_openapi_index.py site/openapi
            cat > "site/openapi/${TAG}/index.html" <<'HTML'
            <!doctype html><html><head><meta charset="utf-8"/>
            <script src="https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js"></script>
            <title>FactSynth API</title></head><body><redoc spec-url="openapi.yaml"></redoc></body></html>
            HTML
          fi
          cat > site/index.html <<'HTML'
          <!doctype html><html><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/>
          <title>FactSynth — Live Demo</title></head><body>
          <h1>FactSynth — Live Demo</h1><p>API: <code id="apiBase"></code></p>
          <textarea id="prompt" rows="6" cols="80">hello world</textarea><br/>
          <input id="max" type="number" value="5" min="1"/><button id="run">Generate</button>
          <pre id="out"></pre><p>Coverage: <img src="./badges/coverage.svg"/></p><p><a href="./openapi/index.html">OpenAPI Docs</a></p>
          <script>
          function q(n){return new URLSearchParams(location.search).get(n)}
          const API = q('api') || (location.origin.includes('github.io') ? '' : location.origin);
          document.getElementById('apiBase').textContent = API || '(set ?api=https://host)';
          document.getElementById('run').onclick = async ()=>{
            const prompt=document.getElementById('prompt').value; const max=parseInt(document.getElementById('max').value||'5',10);
            const out=document.getElementById('out'); out.textContent='...';
            try{
              const r=await fetch((API||'')+'/v1/generate',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt,max_tokens:max})});
              const j=await r.json().catch(async()=>({raw:await r.text()})); out.textContent=JSON.stringify(j,null,2);
            }catch(e){ out.textContent='Request failed: '+e; }
          };
          </script></body></html>
          HTML
      - uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5
      - uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          path: "./site"
      - uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
