name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "*" ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install pre-commit docstr-coverage

      - name: Pre-commit (ruff/black)
        run: |
          pre-commit run --all-files ruff black 2>&1 | tee lint.log

      - name: Docstring coverage
        run: |
          docstr-coverage src tests 2>&1 | tee -a lint.log

      - name: Upload lint logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: lint.log

  type-check:
    name: type-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install --require-hashes -r requirements.lock
          pip install -r requirements-dev.txt
          pip install pyright
          pip install -e . --no-deps

      - name: Mypy (strict)
        run: |
          mypy --strict src tests 2>&1 | tee type-check.log

      - name: Pyright
        run: |
          pyright 2>&1 | tee -a type-check.log

      - name: Upload type-check logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: type-check-logs
          path: type-check.log

  tests:
    name: tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    env:
      API_KEY: change-me
      PYTHONWARNINGS: default
      HYPOTHESIS_PROFILE: ci
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip wheel setuptools
          pip install --require-hashes -r requirements.lock
          pip install -r requirements-dev.txt
          pip install -e . --no-deps
          npm install -g @stoplight/spectral-cli@6

      - name: Check version consistency
        run: python tools/check_version.py

      - name: Pytest
        run: |
          set -o pipefail
          pytest --cov=src --cov-report=xml 2>&1 | tee pytest.log

      - name: Upload coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload test logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.python-version }}-logs
          path: pytest.log

      - name: Spectral lint
        run: spectral lint openapi/openapi.yaml

      - name: Dependency audit
        run: pip-audit -r requirements.lock

  smoke-streams:
    name: smoke (SSE/WS)
    runs-on: ubuntu-latest
    needs: tests
    env:
      API_KEY: change-me
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install --require-hashes -r requirements.lock
          pip install -r requirements-dev.txt
          pip install -e . --no-deps

      - name: Smoke (SSE/WS only)
        run: pytest -q -m smoke -k "stream" --maxfail=1
