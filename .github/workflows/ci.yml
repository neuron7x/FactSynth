name: CI
on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  spectral:
    name: OpenAPI Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Install Spectral
        run: npm ci
      - name: Spectral
        run: npx spectral lint openapi/openapi.yaml

  pip-audit:
    name: Pip Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12', cache: 'pip' }
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.lock
      - name: Run pip-audit
        run: pip-audit -r requirements.lock

  quality:
    name: Quality (ruff/mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12", cache: "pip" }
      - name: Install tools
        run: |
          python -m pip install -U pip
          pip install -U ruff mypy
      - name: Ruff
        run: ruff check . --output-format=github
        continue-on-error: true
      - name: MyPy
        run: mypy --install-types --non-interactive || true
        continue-on-error: true

  tests:
    name: PyTest (smoke)
    needs: [quality, spectral, pip-audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py: ["3.11","3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.lock
      - name: Run smoke tests
        env: { PYTHONPATH: src }
        run: |
          pytest -q tests/smoke --maxfail=1 --disable-warnings --cov=src --cov-report=xml:coverage.xml
      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.py }}
          path: coverage.xml
          if-no-files-found: error
