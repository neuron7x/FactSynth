name: CI

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  security-events: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Lint & Test (py${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.12", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -e .[dev,ops]
      - name: Ruff
        run: ruff check . --output-format=github
      - name: MyPy
        run: mypy --install-types --non-interactive
      - name: PyTest (with coverage)
        run: pytest -q --maxfail=1 --disable-warnings --cov=src --cov-report=xml
      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          retention-days: 7

  build_image:
    name: Build & Push image (main)
    needs: quality
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/factsynth
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trivy_scan:
    name: Trivy scan (image)
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/factsynth:latest
          format: sarif
          output: trivy-results.sarif
          ignore-unfixed: true
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  smoke:
    name: Container smoke test
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ghcr.io/${{ github.repository_owner }}/factsynth:latest
      - name: Run and probe /v1/healthz
        run: |
          docker run -d --name factsynth -e API_KEY=change-me -p 8000:8000 ghcr.io/${{ github.repository_owner }}/factsynth:latest
          sleep 5
          curl -sf http://127.0.0.1:8000/v1/healthz

