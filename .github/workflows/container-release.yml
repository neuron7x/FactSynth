---
name: Container Release
'on':
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  workflow_dispatch:

concurrency:
  group: container-release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/factsynth
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=branch
            type=ref,event=tag
            type=sha
      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ENV=prod

  trivy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Scan image
        uses: aquasecurity/trivy-action@v0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/factsynth:latest
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          limit-severities-for-sarif: true
          exit-code: 1
      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  sbom:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository_owner }}/factsynth:latest
          format: spdx-json
          output-file: sbom.spdx.json
      - uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

  smoke:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ghcr.io/${{ github.repository_owner }}/factsynth:latest
      - name: Run & probe
        run: |
          docker run -d --rm -p 8000:8000 \
            --name factsynth \
            ghcr.io/${{ github.repository_owner }}/factsynth:latest
          for i in $(seq 1 30); do
            curl -fsS http://127.0.0.1:8000/v1/healthz && exit 0 || sleep 2
          done
          docker logs factsynth; exit 1
