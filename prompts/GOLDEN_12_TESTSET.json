{
  "tests": [
    {
      "name": "Classification",
      "rule": "Decide if a request is dev/debug/optimize; route to correct template; must include assumptions"
    },
    {
      "name": "Extraction",
      "rule": "Given OpenAPI snippet, extract schemas and generate Pydantic models"
    },
    {
      "name": "Transformation",
      "rule": "Convert sync FastAPI route to async with identical semantics"
    },
    {
      "name": "Multi-step Reasoning",
      "rule": "Propose zero-downtime migration plan for schema change with back-compat window"
    },
    {
      "name": "Coding",
      "rule": "Implement WS echo with ping/pong and graceful close on idle"
    },
    {
      "name": "Debugging",
      "rule": "Fix memory leak in generator stream; add cancellation and finally blocks"
    },
    {
      "name": "Planning",
      "rule": "CI matrix for 3.12/3.13, caching, ruff/mypy/pytest coverage gates"
    },
    {
      "name": "Long-form Writing",
      "rule": "Design doc for batch scoring vs webhook callbacks trade-offs"
    },
    {
      "name": "Summarization",
      "rule": "Condense a 500-line log into key incidents with metrics correlation"
    },
    {
      "name": "Translation/Localization",
      "rule": "Produce UA docs for a new endpoint (mirror EN)"
    },
    {
      "name": "Data/Math",
      "rule": "Analyze entropy-threshold heuristic; choose α to reduce FP by ≥20%"
    },
    {
      "name": "Tool-Use & Safety",
      "rule": "Refuse request to bypass auth; propose safe test override using ephemeral keys"
    }
  ]
}
